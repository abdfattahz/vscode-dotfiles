{
  // =========================
  // üß∞ C/C++ toolchain & formatters
  // =========================
  "C_Cpp.default.compilerPath": "C:/mingw64/bin/gcc.exe",
  "C_Cpp.formatting": "clangFormat",
  "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 4 }",

  // =========================
  // üñãÔ∏è Editor look & formatting
  // =========================
  "editor.fontFamily": "RobotoMono Nerd Font Mono",
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",

  // Per-language default formatters (Prettier / Black / C++)
  "[javascript]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[html]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[php]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[python]": { "editor.defaultFormatter": "ms-python.black-formatter" },
  "black-formatter.args": ["--line-length", "88"],
  "[c]": { "editor.defaultFormatter": "ms-vscode.cpptools" },
  "[cpp]": { "editor.defaultFormatter": "ms-vscode.cpptools" },

  // Whitespace / line numbers
  "editor.renderWhitespace": "all",
  "editor.lineNumbers": "relative",

  // =========================
  // üß© Themes & icons
  // =========================
  "material-icon-theme.folders.theme": "classic",
  "workbench.iconTheme": "material-icon-theme",

  // =========================
  // ü™ü Workbench chrome (UI)
  // =========================
  "workbench.secondarySideBar.defaultVisibility": "hidden",
  "workbench.navigationControl.enabled": false,
  "window.commandCenter": false,
  "window.menuBarVisibility": "compact",

  // NOTE: This setting is experimental/obscure; comment if noisy
  // "workbench.view.showQuietly": { "workbench.panel.output": false }, // May not exist in all builds

  // =========================
  // üñ•Ô∏è Terminal profiles
  // =========================
  // Old cross-OS profile bucket (can conflict on Windows). Use the Windows-scoped section below.
  // "terminal.integrated.profiles": {
  //   "MSYS2 MinGW64": {
  //     "path": "C:\\msys64\\mingw64.exe"
  //   }
  // },

  "terminal.integrated.defaultProfile.windows": "UbuntuVM (WSL)",
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash"
    },
    "UbuntuVM (WSL)": {
      "path": "C:\\WINDOWS\\System32\\wsl.exe",
      "args": ["-d", "UbuntuVM"]
    }
  },

  // Convenience zoom
  "editor.mouseWheelZoom": true,

  // =========================
  // üêò PHP (validator/debugger)
  // =========================
  "php.validate.executablePath": "C:/xampp/php/php.exe",
  // NOTE: Some PHP debug extensions don't use this setting; safe to keep, but remove if warned by your debugger.
  "php.debug.executablePath": "C:/xampp/php/php.exe",

  // =========================
  // üîê Security / Trust
  // =========================
  "security.allowedUNCHosts": ["wsl.localhost"],
  "security.workspace.trust.untrustedFiles": "open",

  // =========================
  // ‚úçÔ∏è Spellchecker custom words
  // =========================
  "cSpell.userWords": [
    "COMPA",
    "SWUART",
    "TCCR",
    "TIFR",
    "TIMSK",
    "USART",
    "vect"
  ],

  // =========================
  // ü§ñ AI assistants
  // =========================
  "continue.enableTabAutocomplete": false,
  "github.copilot.nextEditSuggestions.enabled": true,

  // =========================
  // ‚öôÔ∏è VSCodeVim / Neovim
  // =========================
  "vim.enableNeovim": true,
  // Use the full path to the executable (not the folder)
  "vim.neovimPath": "C:\\Program Files\\Neovim\\bin\\nvim.exe",
  "vim.surround": true,
  "vim.useSystemClipboard": true,
  // Exit insert with 'kj' then move right once (your custom insert-mode mapping)
  "vim.insertModeKeyBindings": [
    {
      "before": ["k", "j"],
      "after": ["<Esc>", "l"]
    }
  ],

  // ============
  // üß™ Arduino
  // ============
  "arduinoMakerWorkshop.arduinoCLI.userDirectory": "C:\\Users\\ACER\\Documents\\Arduino"
}
